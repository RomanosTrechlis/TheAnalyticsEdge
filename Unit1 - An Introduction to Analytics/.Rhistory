?setwd
setwd("C:\Users\Romanos\Projects\rworkspace\TheAnalyticsEdge\Unit1")
setwd("C:\\Users\Romanos\\Projects\\rworkspace\\TheAnalyticsEdge\\Unit1")
setwd("C:\\Users\\Romanos\\Projects\\rworkspace\\TheAnalyticsEdge\\Unit1")
WHO = read.csv("WHO.csv")
str(WHO)
summary(WHO)
WHO_Europe = subset(WHO, Region == "Europe")
str(WHO_Europe)
write.csv(WHO_Europe, "WHO_Europe.csv")
ls()
rm(WHO_Europe)
ls()
Under15
WHO$Under15
mean(WHO$Under15)
sd(WHO$Under15)
summary(WHO$Under15)
which.min(WHO$Under15)
WHO$Country[86]
which.max(WHO$Under15)
WHO$Country[124]
WHO[124]
plot(WHO$GNI, WHO$FertilityRate)
Outliers = subset(Who, GNI > 10000 & FertilityRate > 2.5)
Outliers = subset(WHO, GNI > 10000 & FertilityRate > 2.5)
nr(Outliers)
nrow(Outliers)
Outliers[c("Country", "GNI", "FertilityRate")]
mean(WHO$Over60)
which.min(WHO$Over60)
WHO$Country[183]
which.max(WHO$LiteracyRate)
WHO$Country[44]
hist(WHO$CellularSubscribers)
boxplot(WHO$LifeExpectancy ~ WHO$Region)
boxplot(WHO$LifeExpectancy ~ WHO$Region, xlab="", ylab="LifeExpectancy")
boxplot(WHO$LifeExpectancy ~ WHO$Region, xlab="", ylab="LifeExpectancy", main="Life Expectancy of Countries by Region")
table(WHO$Region)
tapply(WHO$Over60, WHO$Region, mean)
tapply(WHO$LiteracyRate, WHO$Region, min)
tapply(WHO$LiteracyRate, WHO$Region, min, na.rm=TRUE)
tapply(WHO$ChildMortality, WHO$Region, mean)
min(tapply(WHO$ChildMortality, WHO$Region, mean))
ls()
rm(Outliers)
ls()
rm(WHO)
USDA = read.csv("USDA.csv")
clear
cls
clear()
pwd
getpwd()
getwd()
str(USDA)
summary(USDA)
USDA$Sodium
which.max(USDA$Sodium)
names(USDA)
USDA$Description[265]
HighSodium = subset(USDA, Sodium > 10000)
nrow(HighSodium)
HighSodium$Description
match("CAVIAR", USDA$Description)
USDA$Sodium[4154]
USDA$Sodium[match("CAVIAR", USDA$Description)]
summary(USDA$Sodium)
sd(USDA$Sodium)
sd(USDA$Sodium, na.rm=TRUE)
plot(USDA$Protein, USDA$TotalFat)
plot(USDA$Protein, USDA$TotalFat, xlab="Protein", ylab="Fat", main="Proteing vs Fat", col="red")
hist(USDA$VitaminC, xlab = "Vitamin C", main="Histogram of Vitamin C")
hist(USDA$VitaminC, xlab = "Vitamin C (mg)", main="Histogram of Vitamin C Levels", xlim=c(0,100))
hist(USDA$VitaminC, xlab = "Vitamin C (mg)", main="Histogram of Vitamin C Levels", xlim=c(0,100), breaks = 100)
hist(USDA$VitaminC, xlab = "Vitamin C (mg)", main="Histogram of Vitamin C Levels", xlim=c(0,100), breaks = 2000)
boxplot(USDA$Sugar, main="Boxplot of Sugar Levels", ylab="Sugar")
USDA$Sodium[1] > mean(USDA$Sodium, na.rm=TRUE)
USDA$Sodium[50] > mean(USDA$Sodium, na.rm=TRUE)
HighSodium = USDA$Sodium > mean(USDA$Sodium, na.rm=TRUE)
str(HighSodium)
HighSodium = as.numeric(USDA$Sodium > mean(USDA$Sodium, na.rm=TRUE))
str(HighSodium)
USDA$HighSodium = as.numeric(USDA$Sodium > mean(USDA$Sodium, na.rm=TRUE))
str(USDA)
USDA$Protein = as.numeric(USDA$Protein > mean(USDA$Protein, na.rm=TRUE))
USDA$HighFat = as.numeric(USDA$Fat > mean(USDA$Fat, na.rm=TRUE))
USDA$HighFat = as.numeric(USDA$TotalFat > mean(USDA$TotalFat, na.rm=TRUE))
str(USDA)
table(USDA$HighSodium)
table(USDA$HighSodium, USDA$HighFat)
tapply(USDA$Iron, USDA$Protein, mean)
tapply(USDA$Iron, USDA$Protein, mean, na.rm=TRUE)
tapply(USDA$VitaminC, USDA$Fat, max, na.rm=TRUE)
tapply(USDA$VitaminC, USDA$HighFat, max, na.rm=TRUE)
ls()
rm(HighSodium)
rm(USDA)
ls()
DATA = read.csv("mvtWeek1.csv")
str(DATA)
max(DATA$ID)
min(DATA$Beat)
str(DATA$Arrest)
table(DATA$Arrest)
match("ALLAY", DATA$LocationDescription)
match("ALLEY", DATA$LocationDescription)
DATA$LocationDescription == "ALLEY"
table(DATA$LocationDescription == "ALLEY")
DATA$Date[0]
DATA$Date[1]
DateConvert = as.Date(strptime(DATA$Date, "%m/%d/%y %H:%M"))
summary(DateConvert)
DATA$Month = months(DateConvert)
DATA$Weekday = weekdays(DateConvert)
DATA$Date = DateConvert
table(DATA$Month)
min(table(DATA$Month))
min(table(DATA$Weekday))
table(DATA$Weekday)
max(table(DATA$Weekday))
table(DATA$Months)
table(DATA$Month)
table(DATA$Arrest)
tapply(DATA$Arrest, DATA$Month, table)
tapply(DATA$Arrest, DATA$Month, max)
tapply(DATA$Arrest, DATA$Month, table)
hist(DATA$Date, braks=100)
hist(DATA$Date, breaks=100)
boxplot(DATA$Date ~ DATA$Arrest)
boxplot(DATA$Arrest)
boxplot(DATA$Date)
boxplot(DATA$Date ~ DATA$Arrest)
boxplot(DATA)
table(DATA$Arrest)
table(DATA$Arrest[DATA$Date = 2001])
table(DATA$Arrest[DATA$Date = "2001"])
table(DATA$Arrest[DATA$Date])
table(DATA$Arrest/nrow(DATA$Date))
table(DATA$Arrest)
years(DateConvert)
year(DateConvert)
DATA$Date[1]
match("2001",DATA$Date)
match("2001",DATA$Date, na.rm=TRUE)
DATA$Date = "2001"
DATA$Date == "2001"
table(DATA$Date == "2001")
DATA$Year = as.numeric(format(DATA$Date, "%Y"))
DATA$Year = as.numeric(format(as.character(DATA$Date), "%Y"))
DATA$Year = as.numeric(format(DATA$Date, "%Y"))
?weekdays
DATA$Year = as.POSIXlt(DATA$Date)$year+1900
as.POSIXlt(DATA$Date)$year+1900
as.POSIXlt(DATA$Date[1])$year+1900
as.POSIXlt(as.character(DATA$Date[1]))$year+1900
as.numeric(format(DATA$Date[1], "%Y"))
as.numeric(format(as.character(DATA$Date[1]), "%Y"))
as.numeric(format(as.char(DATA$Date[1]), "%Y"))
as.numeric(format(DATA$Date, "%Y"))
tmp <-  as.Date('3/2/2015','%m/%d/%Y')
format(tmp,'%Y')
format(DATA$Date[1], "%Y")
format(as.Date(DATA$Date[1]), "%Y")
format(DATA$Date[1], "%y")
date = as.Date(DATA$Date, "%m/%d/%Y")
DATA$Year = as.numeric(format(date, "%Y"))
summary(DATA$Year)
DATA$Year[1]
summary(date)
DATA$Date[1]
DATA$Date[2]
DATA$Date[3]
DATA$Date = DateConvert
DATA$Date[3]
date = as.Date(DATA$Date, "%m/%d/%Y")
DATA$Year = as.numeric(format(date, "%Y"))
DATA$Year[1]
table(DATA$Arrest[DATA$Year == 2001])
2152/(2152+18517)
table(DATA$Arrest[DATA$Year == 2007])
1212/(1212+13068)
table(DATA$Arrest[DATA$Year == 2012])
550/(550+13542)
table(DATA$LocationDescription)
sort(table(DATA$LocationDescription))
Top5 = table(DATA$LocationDescription=="STREET" | DATA$LocationDescription=="PARKING LOT/GARAGE(NON.RESID.)" | DATA$LocationDescription=="ALLEY" | DATA$LocationDescription=="GAS STATION" | DATA$LocationDescription=="DRIVEWAY - RESIDENTIAL")
Top5
Top5 = subset(DATA, LocationDescription=="STREET" | LocationDescription=="PARKING LOT/GARAGE(NON.RESID.)" | LocationDescription=="ALLEY" | LocationDescription=="GAS STATION" | LocationDescription=="DRIVEWAY - RESIDENTIAL")
summary(Top5)
nrow(Top5)
Top5$LocationDescription = factor(Top5$LocationDescription)
Top5
str(Top5)
tapply(nrow(Top5), Top5$LocationDescription, mean)
tapply(Top5, Top5$LocationDescription, mean)
summary(Top5$LocationDescription)
summary(Top5$ArrestRate)
tapply(Top5$ArrestRate, Top5$LocationDescription, mean)
summary(Top5$Arrest)
boxplot(Top5$arrest ~ Top5$LocationDescription)
boxplot(Top5$arrest ~ Top5$LocationDescription, na.rm=TRUE)
boxplot(Top5$Arrest ~ Top5$LocationDescription, na.rm=TRUE)
boxplot(Top5$Arrest ~ Top5$LocationDescription)
hist(Top5$Arrest ~ Top5$LocationDescription)
tapply(Top5$Arrest, Top5$Month, table)
tapply(Top5$Arrest, Top5$LocationDescription, table)
tapply(Top5$Arrest, Top5$LocationDescription, min)
tapply(Top5$Arrest, Top5$LocationDescription, max)
tapply(Top5$Arrest, Top5$LocationDescription, mean)
tapply(Top5$Arrest, Top5$LocationDescription, table)
tapply(Top5$LocationDescription, Top5$Weekday, table)
tapply(Top5$LocationDescription, Top5$Weekday, table)
ls()
rm(DATA, date, DateConvert, tmp, Top5)
ls()
IBM = read.csv("IBMStock.csv")
GE = read.csv("GEStock.csv")
CocaCola = read.csv("CocaColaStock.csv")
ProcterGamble = read.csv("ProcterGambleStock.csv")
Boeing = read.csv("BoeingStock.csv")
IBM$Date = as.Date(IBM$Date, "%m/%d/%y")
GE$Date = as.Date(GE$Date, "%m/%d/%y")
CocaCola$Date = as.Date(CocaCola$Date, "%m/%d/%y")
ProcterGamble$Date = as.Date(ProcterGamble$Date, "%m/%d/%y")
Boeing$Date = as.Date(Boeing$Date, "%m/%d/%y")
str(IBM)
str(GE)
min(GE$Date)
max(GE$Date)
mean(IBM$StockPrice)
min(GE$StockPrice)
max(CocaCola$StockPrice)
summary(Boeing$StockPrice)
sd(ProcterGamble)
sd(ProcterGamble$StockPrice)
plot(CocaCola$Date, CocaCola$StockPrice)
plot(CocaCola$Date, CocaCola$StockPrice, xlab="Date", ylab="Stockprice", arg="I")
plot(CocaCola$Date, CocaCola$StockPrice, xlab="Date", ylab="Stockprice")
plot(CocaCola$Date, CocaCola$StockPrice, xlab="Date", ylab="Stockprice", type="l")
lines(ProcterGamble$Date, ProcterGamble$StockPrice)
plot(CocaCola$Date, CocaCola$StockPrice, xlab="Date", ylab="Stockprice", type="l")
lines(ProcterGamble$Date, ProcterGamble$StockPrice, col="red")
abline(v=as.Date(c("2000-03-01")), lwd=2)
abline(v=as.Date(c("1983-03-01")), lwd=2)
plot(CocaCola$Date, CocaCola$StockPrice, xlab="Date", ylab="Stockprice", type="l")
lines(ProcterGamble$Date, ProcterGamble$StockPrice, col="red")
abline(v=as.Date(c("2000-03-01")), lwd=2)
abline(v=as.Date(c("1983-01-01")), lwd=2)
plot(CocaCola$Date[301:432], CocaCola$StockPrice[301:432], type="l", col="red", ylim=c(0,210))
plot(CocaCola$Date[301:432], CocaCola$StockPrice[301:432], type="l", col="red", ylim=c(0,210))
lines(ProcterGamble$Date[301:432], ProcterGamble$StockPrice[301:432], col="green")
lines(IBM$Date[301:432], IBM$StockPrice[301:432], col="orange")
lines(GE$Date[301:432], GE$StockPrice[301:432], col="yellow")
lines(Boeing$Date[301:432], Boeing$StockPrice[301:432], col="black")
abline(v=as.Date(c("1997-09-01")), lwd=2)
abline(v=as.Date(c("1983-11-01")), lwd=2)
abline(v=as.Date(c("1997-11-01")), lwd=2)
abline(v=as.Date(c("2004-01-01")), lwd=2)
abline(v=as.Date(c("2005-12-31")), lwd=2)
abline(v=as.Date(c("2005-01-01")), lwd=2)
tapply(IBM$StockPrice, months(IBM$Date), mean)
mean(IBM$StockPrice)
tapply(CocaCola$StockPrice, months(CocaCola$Date), mean)
tapply(GE$StockPrice, months(GE$Date), mean)
max(tapply(CocaCola$StockPrice, months(CocaCola$Date), mean))
max(tapply(GE$StockPrice, months(GE$Date), mean))
tapply(CocaCola$StockPrice, months(CocaCola$Date), mean)
tapply(GE$StockPrice, months(GE$Date), mean)
ls()
rm(Boeing, CocaCola, GE, IBM, ProcterGamble)
ls()
CPS = read.csv("CPSData.csv")
CPS[1]
str(CPS)
summary(CPS$Industry)
sort(table(CPS$Region))
sort(table(CPS$State))
summary(CPS)
(116639+7073)/(116639+7073+7590)
CPS$Race[Hispanic > 199]
MoreThan250Hispanic = subset(CPS, Hispanic > 249)
summary(MoreThan250Hispanic$Race)
str(MoreThan250Hispanic)
MoreThan250Hispanic[1]
MoreThan250Hispanic$Region[1]
table(MoreThan250Hispanic$Race)
table(MoreThan250Hispanic$Hispanic)
MoreThan250Hispanic$Hispanic
table(MoreThan250Hispanic)
View(MoreThan250Hispanic)
CPS[CPS$Hispanic > 249]
CPS$Hispanic
tapply(CPS$Race, CPS$Hispanic, sum(CPS$Hispanic))
tapply(CPS$Race, CPS$Hispanic, table)
str(CPS)
summary(CPS)
is.na(CPS$Married)
table(CPS$Region, is.na(CPS$Married))
is.na(CPS$Married[1])
CPS$Married[1]
table(CPS$Sex, is.na(CPS$Married))
table(CPS$Age, is.na(CPS$Married))
table(CPS$Citizenship, is.na(CPS$Married))
table(CPS$State, is.na(CPS$MetroAreaCode))
table(CPS$Region, is.na(CPS$MetroAreaCode))
10674/(10674+20010)
5609/(5609+20330)
9871/(9871+31631)
8084/(8084+25093)
mean(table(CPS$State, is.na(CPS$MetroAreaCode)))
table(CPS$State, mean(is.na(CPS$MetroAreaCode)))
is.na(CPS$MetroAreaCode)
mean(is.na(CPS$MetroAreaCode))
table(CPS$State,mean(is.na(CPS$MetroAreaCode)))
table(CPS$State, mean(is.na(CPS$MetroAreaCode)))
tapply(CPS$State, CPS$MetroAreaCode, mean)
tapply(CPS$State, is.na(CPS$MetroAreaCode), mean)
tapply(CPS$State, mean(is.na(CPS$MetroAreaCode)), table)
tapply(CPS$State, is.na(CPS$MetroAreaCode), table)
tapply(CPS$State, is.na(CPS$MetroAreaCode), mean)
mean(tapply(CPS$State, is.na(CPS$MetroAreaCode), table))
tapply(CPS$State, is.na(CPS$MetroAreaCode), mean)
tapply(CPS$State, mean(CPS$MetroAreaCode), table)
tapply(CPS$State, CPS$MetroAreaCode, table)
tapply(CPS$State, CPS$MetroAreaCode, mean)
tapply(CPS$State, is.na(CPS$MetroAreaCode), mean)
tapply(CPS$State, is.na(CPS$MetroAreaCode), str)
tapply(CPS$State, mean(is.na(CPS$MetroAreaCode)), str)
mean(tapply(CPS$State, is.na(CPS$MetroAreaCode), str))
tapply(CPS$State, is.na(CPS$MetroAreaCode), str)
tapply(CPS$State, is.na(CPS$MetroAreaCode), summary)
mean(tapply(CPS$State, is.na(CPS$MetroAreaCode), summary))
tapply(CPS$State, is.na(CPS$MetroAreaCode), summary)
tapply(mean(is.na(CPS$MetroAreaCode)), CPS$State, str)
tapply(is.na(CPS$MetroAreaCode), CPS$State, str)
tapply(is.na(CPS$MetroAreaCode), CPS$State, mean)
sort(tapply(is.na(CPS$MetroAreaCode), CPS$State, mean))
MetroAreaMap = read.csv("MetroAreaCodes.csv")
str(MetroAreaMap)
CountryMap = read.csv("CountryCode.csv")
CountryMap = read.csv("CountryCodes.csv")
str(CountryMap)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
str(CPS)
summary(CPS$MetroArea)
sort(summary(CPS$MetroArea))
tapply(CPS$MetroArea, CPS$Hispanic, mean)
tapply(CPS$MetroArea, CPS$Hispanic, mean, na.rm=TRUE)
tapply(CPS$MetroArea, CPS$Hispanic, str)
tapply(CPS$MetroArea, CPS$Hispanic, summary)
tapply(CPS$MetroArea, CPS$Hispanic, mean)
tapply(CPS$MetroArea, CPS$Hispanic, summary)
mean(tapply(CPS$MetroArea, CPS$Hispanic, summary))
tapply(CPS$MetroArea, is.na(CPS$Hispanic), summary)
tapply(CPS$MetroArea, is.na(CPS$Hispanic), mean)
tapply(is.na(CPS$Hispanic), CPS$MetroArea, mean)
tapply(is.na(CPS$Hispanic), CPS$MetroArea, mean)
CPS$Hispanic[1]
tapply(CPS$Hispanic, CPS$MetroArea, mean)
sort(tapply(CPS$Hispanic, CPS$MetroArea, mean))
CPS[CPS$Race == "Asian"]
CPS$Race[CPS$Race == "Asian"]
summary(CPS$Race)
tapply(CPS$Race == "Asian", CPS$MetroArea, mean)
sort(tapply(CPS$Race == "Asian", CPS$MetroArea, mean))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE))
summary(CountryMap)
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
summary(CPS)
sort(CPS$Country)
summary(CPS)
tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean)
tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA" & CPS$Country != "United States", CPS$Country, mean, na.rm=TRUE)
tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean, na.rm=TRUE)
test = subset(CPS, MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA" & Country != "United States")
str(test)
test = subset(CPS, MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA" & Country != "United States", na.rm=TRUE)
str(test)
test1 = subset(CPS, MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", na.rm=TRUE)
str(test1)
1668/5409
tapply(CPS$Country == "India", CPS$MetroArea, summary, na.rm=TRUE)
tapply(CPS$Country == "India", CPS$MetroArea, str, na.rm=TRUE)
tapply(CPS$Country == "India", CPS$MetroArea, table, na.rm=TRUE)
tapply(CPS$Country == "India", CPS$MetroArea, mean, na.rm=TRUE)
tapply(CPS$Country == "India", CPS$MetroArea, summary, na.rm=TRUE)
sort(tapply(CPS$Country == "India", CPS$MetroArea, summary, na.rm=TRUE))
tapply(CPS$Country == "India", CPS$MetroArea, summary, na.rm=TRUE)
tapply(CPS$Country == "India", CPS$MetroArea, sum, na.rm=TRUE)
sort(tapply(CPS$Country == "India", CPS$MetroArea, sum, na.rm=TRUE))
sort(tapply(CPS$Country == "Brazil", CPS$MetroArea, sum, na.rm=TRUE))
sort(tapply(CPS$Country == "Somalia", CPS$MetroArea, sum, na.rm=TRUE))
ls()
rm(CountryMap, CPS, MetroAreaMap, MoreThan250Hispanic, test, test1)
ls()
POLL = read.csv("AnonymityPoll.csv")
str(POLL)
table(POLL)
table(POLL$Smartphone)
summary(POLL)
487+472+43
table(POLL$Sex, POLL$Region)
table(POLL$State, POLL$Region)
table(POLL$Smartphone)
table(POLL$Internet, POLL$Smartphone)
summary(POLL$Internet.Use)
summary(POLL$Internet)
summary(POLL$Smartphone)
limited = subset(POLL, Smartphone == 1 | Internet == 1)
limited = subset(POLL, Smartphone == 1 | Internet.Use == 1)
str(limited)
summary(limited)
table(limited$Info.On.Internet)
table(limited$Worry.About.Info)
386/(386+404)
table(limited$Anonymity.Possible)
278/(278+475)
table(limited$Tried.Masking.Identity)
128/(128+656)
table(limited$Privacy.Laws.Effective)
186/(186+541)
hist(limited$Age)
plot(limited$Age, limited$Info.On.Internet)
table(imited$Age ~ limited$Info.On.Internet)
table(imited$Age, limited$Info.On.Internet)
table(limited$Age ~ limited$Info.On.Internet)
table(limited$Age, limited$Info.On.Internet)
jitter(c(1, 2, 3))
jitter(c(1, 2, 3))
jitter(c(1, 2, 3))
jitter(limited$Info.On.Internet))
jitter(limited$Info.On.Internet)
plot(jitter(limited$Age), jitter(limited$Info.On.Internet))
tapply(limited$Info.On.Internet, limited$Smartphone, summary)
tapply(limited$Tried.Masking.Identity, limited$Smartphone, summary)
ls
ls()
rm(limited, POLL)
ls()
exit
exit()
